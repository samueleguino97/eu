/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/classes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.classes.id"];
          group_id?: parameters["rowFilter.classes.group_id"];
          created_at?: parameters["rowFilter.classes.created_at"];
          period?: parameters["rowFilter.classes.period"];
          registered?: parameters["rowFilter.classes.registered"];
          attendances?: parameters["rowFilter.classes.attendances"];
          date?: parameters["rowFilter.classes.date"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["classes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** classes */
          classes?: definitions["classes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.classes.id"];
          group_id?: parameters["rowFilter.classes.group_id"];
          created_at?: parameters["rowFilter.classes.created_at"];
          period?: parameters["rowFilter.classes.period"];
          registered?: parameters["rowFilter.classes.registered"];
          attendances?: parameters["rowFilter.classes.attendances"];
          date?: parameters["rowFilter.classes.date"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.classes.id"];
          group_id?: parameters["rowFilter.classes.group_id"];
          created_at?: parameters["rowFilter.classes.created_at"];
          period?: parameters["rowFilter.classes.period"];
          registered?: parameters["rowFilter.classes.registered"];
          attendances?: parameters["rowFilter.classes.attendances"];
          date?: parameters["rowFilter.classes.date"];
        };
        body: {
          /** classes */
          classes?: definitions["classes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/groups": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.groups.id"];
          name?: parameters["rowFilter.groups.name"];
          color?: parameters["rowFilter.groups.color"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["groups"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** groups */
          groups?: definitions["groups"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.groups.id"];
          name?: parameters["rowFilter.groups.name"];
          color?: parameters["rowFilter.groups.color"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.groups.id"];
          name?: parameters["rowFilter.groups.name"];
          color?: parameters["rowFilter.groups.color"];
        };
        body: {
          /** groups */
          groups?: definitions["groups"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/latest_period": {
    get: {
      parameters: {
        query: {
          max?: parameters["rowFilter.latest_period.max"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["latest_period"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/students": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.students.id"];
          group_id?: parameters["rowFilter.students.group_id"];
          name?: parameters["rowFilter.students.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["students"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** students */
          students?: definitions["students"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.students.id"];
          group_id?: parameters["rowFilter.students.group_id"];
          name?: parameters["rowFilter.students.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.students.id"];
          group_id?: parameters["rowFilter.students.group_id"];
          name?: parameters["rowFilter.students.name"];
        };
        body: {
          /** students */
          students?: definitions["students"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  classes: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `groups.id`.<fk table='groups' column='id'/>
     */
    group_id: string;
    created_at: string;
    period: number;
    registered: boolean;
    attendances?: string;
    date?: string;
  };
  groups: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    name?: string;
    color?: string;
  };
  latest_period: {
    max?: number;
  };
  students: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `groups.id`.<fk table='groups' column='id'/>
     */
    group_id: string;
    name: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** classes */
  "body.classes": definitions["classes"];
  "rowFilter.classes.id": string;
  "rowFilter.classes.group_id": string;
  "rowFilter.classes.created_at": string;
  "rowFilter.classes.period": string;
  "rowFilter.classes.registered": string;
  "rowFilter.classes.attendances": string;
  "rowFilter.classes.date": string;
  /** groups */
  "body.groups": definitions["groups"];
  "rowFilter.groups.id": string;
  "rowFilter.groups.name": string;
  "rowFilter.groups.color": string;
  /** latest_period */
  "body.latest_period": definitions["latest_period"];
  "rowFilter.latest_period.max": string;
  /** students */
  "body.students": definitions["students"];
  "rowFilter.students.id": string;
  "rowFilter.students.group_id": string;
  "rowFilter.students.name": string;
}

export interface operations {}
